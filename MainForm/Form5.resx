<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="label1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>